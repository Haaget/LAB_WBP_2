https://github.com/Haaget/LAB_WBP_2

1. Яке основне призначення webpack?

Webpack — це інструмент для збірки JavaScript-додатків.
Його основне призначення — об'єднувати модулі (JS, CSS, HTML, зображення)
в один або кілька оптимізованих файлів для ефективної роботи додатка у браузері.

2. Яка різниця між завантажувачами та плагінами?

Завантажувачі (loaders): Обробляють окремі файли (JS, CSS, зображення)
та перетворюють їх у формат, зрозумілий Webpack.
Наприклад, babel-loader для трансформації JS.
Плагіни (plugins): Розширюють функціонал Webpack, виконуючи глобальні завдання,
як-от оптимізація, очищення директорій (CleanWebpackPlugin) або створення HTML (HtmlWebpackPlugin).

3. Наведіть приклади завантажувачів.

Ось кілька прикладів завантажувачів (loaders) у Webpack:
babel-loader: Трансформує сучасний JS (ES6+) у сумісний з браузерами код.
css-loader: Додає підтримку імпорту CSS у JS.
style-loader: Вбудовує CSS у DOM через <style> теги.
file-loader: Копіює файли (зображення, шрифти) у вихідну директорію.
url-loader: Інлайнить файли як Base64 URL, якщо їх розмір малий.
sass-loader: Компілює SCSS/SASS у CSS.

4. Наведіть приклади завантажувачів.

Ось приклади популярних плагінів (plugins) у Webpack:
HtmlWebpackPlugin: Генерує HTML-файли, підключаючи зібрані скрипти.
CleanWebpackPlugin: Очищає папку dist перед збіркою.
MiniCssExtractPlugin: Виносить CSS у окремі файли.
TerserWebpackPlugin: Оптимізує та мінімізує JavaScript.
WebpackBundleAnalyzer: Візуалізує розмір бандлів для оптимізації.
CopyWebpackPlugin: Копіює файли у вихідну папку без змін.